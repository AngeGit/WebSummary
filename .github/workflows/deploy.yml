name: Deploy KMM Web (WASM) to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      mode:
        description: "Build mode"
        type: choice
        options: [ normal, debug ]
        default: normal
        required: true
      retries:
        description: "Number of retry attempts on transient failures"
        type: number
        default: 2
        required: true
      max_workers:
        description: "Gradle max workers"
        type: number
        default: 2
        required: true
      jvm_xmx_gb:
        description: "JVM heap size (GB)"
        type: number
        default: 3
        required: true
      node_mem_mb:
        description: "Node heap (MB) for bundlers"
        type: number
        default: 4096
        required: true

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

# Global env with sensible defaults; workflow_dispatch inputs override via expressions below
env:
  # Clear Gradle logs
  GRADLE_OPTS: "-Dorg.gradle.console=plain -Dfile.encoding=UTF-8"
  JAVA_TOOL_OPTIONS: "-Dfile.encoding=UTF-8"
  # Defaults; overridden by inputs on workflow_dispatch
  ORG_GRADLE_PROJECT_org.gradle.jvmargs: ${{ format('-Xmx{0}g -XX:MaxMetaspaceSize=512m -Dkotlin.daemon.jvm.options=-Xmx{0}g', inputs.jvm_xmx_gb || 3) }}
  ORG_GRADLE_PROJECT_org.gradle.workers.max: ${{ inputs.max_workers || 2 }}
  NODE_OPTIONS: ${{ format('--max-old-space-size={0}', inputs.node_mem_mb || 4096) }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Show environment info
        run: |
          set -euxo pipefail
          echo "Mode: ${{ github.event.inputs.mode || 'normal' }}"
          echo "Retries: ${{ github.event.inputs.retries || 2 }}"
          echo "Gradle workers: ${{ env.ORG_GRADLE_PROJECT_org.gradle.workers.max }}"
          echo "JVM args: ${{ env.ORG_GRADLE_PROJECT_org.gradle.jvmargs }}"
          echo "NODE_OPTIONS: $NODE_OPTIONS"
          java -version
          ./gradlew --version
          node --version || true
          npm --version || true
          df -h || true
          free -h || true

      - name: Set up Gradle (with caching)
        uses: gradle/gradle-build-action@v3

      # Build with retries and conditional debug flags
      - name: Build WASM/JS distribution (dual-mode + retries)
        env:
          BUILD_RETRIES: ${{ github.event.inputs.retries || 2 }}
          BUILD_MODE: ${{ github.event.inputs.mode || 'normal' }}
        run: |
          set -euxo pipefail
          if [ "${BUILD_MODE}" = "debug" ]; then
            EXTRA_FLAGS="--debug --scan"
          else
            EXTRA_FLAGS="--info"
          fi
          attempt() {
            ./gradlew :composeApp:wasmJsBrowserDistribution \
              --no-daemon \
              --stacktrace \
              --warning-mode=all \
              ${EXTRA_FLAGS}
          }
          n=0
          until [ $n -ge "${BUILD_RETRIES}" ]; do
            attempt && break
            n=$((n+1))
            echo "Build failed (attempt $n/${BUILD_RETRIES}). Retrying in 15sâ€¦"
            sleep 15
          done
          # Final run to return the correct exit code if it still fails
          attempt

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: composeApp/build/dist/wasmJs/productionExecutable

      # ====== Diagnostic data if the build fails ======
      - name: Upload Gradle daemon logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-daemon-logs
          path: ~/.gradle/daemon/*/daemon-*.log
          if-no-files-found: ignore

      - name: Upload build reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            **/build/reports/**
            **/build/test-results/**
            **/build/outputs/**
          if-no-files-found: warn

      - name: System snapshot (always)
        if: always()
        run: |
          set +e
          echo "===== Disk usage ====="
          df -h
          echo "===== Memory ====="
          free -h
          echo "===== Largest build dirs ====="
          du -h -d 2 . | sort -h | tail -n 25 || true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
